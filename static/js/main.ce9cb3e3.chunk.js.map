{"version":3,"sources":["components/form/form1.js","components/form/form2.js","components/form/form3.js","components/form/form4.js","components/form/form5.js","components/form/form6.js","components/form/home.js","components/form/final.js","components/form/MultiStepForm.js","App.tsx","reportWebVitals.ts","index.tsx"],"names":["StepOne","nextStep","handleFormData","values","useState","error","setError","Card","style","marginTop","Body","Text","Form","onSubmit","e","preventDefault","validator","isEmpty","Name","dob","Gender","Row","className","Group","as","Col","md","Label","Control","border","length","name","defaultValue","type","placeholder","onInput","onChange","color","DropdownButton","id","variant","toLowerCase","title","onSelect","Dropdown","Item","eventKey","Button","StepTwo","prevStep","email","mail","test","alert","ValidateEmail","display","justifyContent","onClick","StepThree","experience","Check","inline","value","label","defaultChecked","StepFour","experience_level","StepFive","handleFormData1","fitness_level","ButtonToolbar","aria-label","ButtonGroup","StepSix","Comments","FloatingLabel","controlId","height","Home","Title","Final","textAlign","Header","MultiStepForm","step","setstep","age","formData","setFormData","i","handleInputData","input","target","console","log","prevState","Container","span","offset","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce9cb3e3.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport {Col, Row,Form, Card, Button, DropdownButton,Dropdown } from \"react-bootstrap\";\nimport validator from \"validator\";\n\nconst StepOne = ({ nextStep, handleFormData, values }) => {\n  const [error, setError] = useState(false);\n\n  const submitFormData = (e) => {\n    e.preventDefault();\n\n    if (\n      validator.isEmpty(values.Name) ||\n       validator.isEmpty(values.dob)||\n      values.Gender===\"Gender\"\n    ) {\n      setError(true);\n    } else {\n      nextStep(1);\n    }\n  };\n\n  return (\n    <div>\n      <Card style={{ marginTop: 100 }}>\n        <Card.Body>\n        <Card.Text>Question 1: Would you like to provide us with the following details?\n</Card.Text>\n\n          <Form onSubmit={submitFormData}>\n          <Row className=\"mb-3\">\n\n            <Form.Group as={Col} md=\"4\">\n              <Form.Label> Name</Form.Label>\n              <Form.Control\n                style={{ border: error&& (values.Name.length<1) ? \"2px solid red\" : \"\" }}\n                name=\"firstName\"\n                defaultValue={values.Name}\n                type=\"text\"\n                placeholder=\"Name\"\n                \n                onInput={()=>setError(false)}\n                onChange={handleFormData(\"Name\")}\n              />\n              {error && (values.Name.length<1) ? (\n                <Form.Text style={{ color: \"red\" }}>\n                  This is a required field\n                </Form.Text>\n              ) : (\n                \"\"\n              )}\n                  </Form.Group>\n                \n                  <Form.Group as={Col} md=\"4\">\n\n\n                  <Form.Label>Select Date</Form.Label>\n            <Form.Control type=\"date\" name=\"dob\" \n            defaultValue={values.dob}\n                            style={{ border: error&& (values.dob.length<1) ? \"2px solid red\" : \"\" }}\n\n            placeholder=\"Date of Birth\"\n              onChange={handleFormData(\"dob\")}/>\n          {error && (values.dob.length<1) ? (\n                <Form.Text style={{ color: \"red\" }}>\n                  This is a required field\n                </Form.Text>\n              ) : (\n                \"\"\n              )}\n\n\n                   </Form.Group>\n                <Form.Group as={Col} md=\"4\">\n                <Form.Label>Gender</Form.Label>\n                     <DropdownButton\n\n                                     id={`dropdown-variants-Success`}\n                                     variant={error&& (values.Gender===\"Gender\") ?\"Danger\".toLowerCase():\"Success\".toLowerCase()}\n                                     \n                                     \n\n    \n      title= {values.Gender}\n      onSelect={handleFormData(\"Gender\")}\n    >\n      <Dropdown.Item eventKey=\"Male\">Male</Dropdown.Item>\n      <Dropdown.Item eventKey=\"Female\">Female</Dropdown.Item>\n      <Dropdown.Item eventKey=\"Others\">Others</Dropdown.Item>\n     \n    </DropdownButton>\n    {error&& (values.Gender===\"Gender\") ? (\n                <Form.Text style={{ color: \"red\" }}>\n                  This is a required field\n                </Form.Text>\n              ) : (\n                \"\"\n              )}\n          </Form.Group> \n            </Row>\n            <Button variant=\"primary\" type=\"submit\">\n              Continue\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n\n\n\n\n\n      \n    </div>\n  );\n};\n\nexport default StepOne;","import React, { useState } from \"react\";\nimport { Form, Card, Button } from \"react-bootstrap\";\nimport validator from \"validator\";\n\n\nconst StepTwo = ({ nextStep, handleFormData, prevStep, values }) => {\n  const [error, setError] = useState(false);\n  \n  const submitFormData = (e) => {\n    e.preventDefault();\n\n    if ( validator.isEmpty(values.email)||ValidateEmail(values.email)) {\n      setError(true);\n    } else {\n      nextStep(1);\n    }\n  };\n  function ValidateEmail(mail) \n  {\n   if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(mail))\n    {\n      return (false)\n    }\n      alert(\"You have entered an invalid email address!\")\n      return (true)\n  }\n  return (\n    <>\n      <Card style={{ marginTop: 100 }}>\n        <Card.Body>\n        <Card.Text>Question 2: Thanks, {values.Name}. What’s the best email address to reach you at?\n</Card.Text>\n\n          <Form onSubmit={submitFormData}>\n           \n            <Form.Group className=\"mb-3\">\n\n                \n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                style={{ border: error ? \"2px solid red\" : \"\" }}\n                type=\"email\"\n                defaultValue={values.email}\n                placeholder=\"email\"\n                onChange={handleFormData(\"email\")}\n              />\n              {error ? (\n                <Form.Text style={{ color: \"red\" }}>\n                  This is a required field\n                </Form.Text>\n              ) : (\n                \"\"\n              )}\n            </Form.Group>\n            <div style={{ display: \"flex\", justifyContent: \"space-around\" }}><Button variant=\"primary\" type=\"submit\">\n                ok\n              </Button>\n              </div>\n              <br>\n</br>\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n              <Button variant=\"primary\" onClick={()=>prevStep(1)}>\n               <b>{\"<\"}</b>\n              </Button>\n\n\n              <Button variant=\"primary\" type=\"submit\">\n              <b>{\">\"}</b>\n              </Button>\n            </div>\n\n\n          </Form>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default StepTwo;","\nimport React, { useState } from \"react\";\nimport { Form, Card, Button } from \"react-bootstrap\";\nimport validator from \"validator\";\n\n\nconst StepThree = ({ nextStep, handleFormData, prevStep, values }) => {\n  const [error, setError] = useState(false);\n\n\n  const submitFormData = (e) => {\n    e.preventDefault();\n\n    if ( validator.isEmpty(values.experience)) {\n      setError(true);\n    } else {\n        if(values.experience===\"YES\"){\n      nextStep(1);\n        }else{\n            nextStep(2);\n          \n\n        }\n    }\n  };\n  return (\n    <>\n      <Card style={{ marginTop: 100 }}>\n        <Card.Body>\n        <Card.Text>Question 3: Have you ever practised yoga before?\n</Card.Text>\n\n          <Form onSubmit={submitFormData}>\n           \n            <Form.Group className=\"mb-3\">\n\n                \n            <Form.Check\n        inline\n        value=\"YES\"\n        label=\"YES\"\n        name=\"group1\"\n        type=\"radio\"\n        defaultChecked={(values.experience===\"YES\")?\"checked\":\"\"}\n        onClick={handleFormData(\"experience\")}\n        id={`inline-${\"radio\"}-1`}\n      />\n      <Form.Check\n        inline\n        value=\"NO\"\n        label=\"NO\"\n        name=\"group1\"\n        defaultChecked={(values.experience===\"NO\")?\"checked\":\"\"}\n        type=\"radio\"\n        onClick={handleFormData(\"experience\")}\n\n        id={`inline-${\"radio\"}-2`}\n      />\n    \n\n\n              {/* {error ? (\n                <Form.Text style={{ color: \"red\" }}>\n                  This is a required field\n                </Form.Text>\n              ) : (\n                \"\"\n              )} */}\n            </Form.Group>\n           \n            <div style={{ display: \"flex\", justifyContent: \"space-around\" }}><Button variant=\"primary\" type=\"submit\">\n                ok\n              </Button>\n              </div>\n              <br>\n</br>\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n              <Button variant=\"primary\" onClick={()=>prevStep(1)}>\n               <b>{\"<\"}</b>\n              </Button>\n\n\n              <Button variant=\"primary\" type=\"submit\">\n              <b>{\">\"}</b>\n              </Button>\n            </div>\n\n\n          </Form>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default StepThree;","\nimport React, { useState } from \"react\";\nimport { Form, Card, Button } from \"react-bootstrap\";\nimport validator from \"validator\";\n\n\nconst StepFour = ({ nextStep, handleFormData, prevStep, values }) => {\n  const [error, setError] = useState(false);\n\n  const submitFormData = (e) => {\n    e.preventDefault();\n\n    if ( validator.isEmpty(values.experience_level)) {\n      setError(true);\n    } else {\n      nextStep(1);\n    }\n  };\n  const prev=()=>{\n      if(values.experience===\"YES\"){\n        prevStep(1)\n      }else{\n        prevStep(2)\n      }\n  }\n  return (\n    <>\n      <Card style={{ marginTop: 100 }}>\n        <Card.Body>\n        <Card.Text>Question 4: How would you describe your current Yoga practice?\n\n</Card.Text>\n\n          <Form onSubmit={submitFormData}>\n           \n            <Form.Group className=\"mb-3\">\n\n                \n            <Form.Check\n        inline\n        value=\"Beginner\"\n        label=\"Beginner\"\n        name=\"group1\"\n        type=\"checkbox\"\n        defaultChecked={(values.experience_level===\"Beginner\")?\"checked\":\"\"}\n\n        onClick={handleFormData(\"experience_level\")}\n        id={`inline-${\"checkbox\"}-1`}\n      />\n      <Form.Check\n        inline\n        value=\"Intermediate\"\n        label=\"Intermediate\"\n        name=\"group1\"\n        type=\"checkbox\"\n        defaultChecked={(values.experience_level===\"Intermediate\")?\"checked\":\"\"}\n\n        onClick={handleFormData(\"experience_level\")}\n        id={`inline-${\"checkbox\"}-2`}\n      />\n    \n    <Form.Check\n        inline\n        value=\"Advanced\"\n        label=\"Advanced\"\n        name=\"group1\"\n        defaultChecked={(values.experience_level===\"Advanced\")?\"checked\":\"\"}\n\n        type=\"checkbox\"\n        onClick={handleFormData(\"experience_level\")}\n        id={`inline-${\"checkbox\"}-3`}\n      />\n\n              {/* {error ? (\n                <Form.Text style={{ color: \"red\" }}>\n                  This is a required field\n                </Form.Text>\n              ) : (\n                \"\"\n              )} */}\n            </Form.Group>\n           \n            <div style={{ display: \"flex\", justifyContent: \"space-around\" }}><Button variant=\"primary\" type=\"submit\">\n                ok\n              </Button>\n              </div>\n              <br>\n</br>\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n              <Button variant=\"primary\" onClick={prev}>\n               <b>{\"<\"}</b>\n              </Button>\n\n\n              <Button variant=\"primary\" type=\"submit\">\n              <b>{\">\"}</b>\n              </Button>\n            </div>\n\n\n          </Form>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default StepFour;","\nimport React, { useState } from \"react\";\nimport { Form,ButtonToolbar,ButtonGroup, Card, Button } from \"react-bootstrap\";\nimport validator from \"validator\";\n\n\nconst StepFive = ({ nextStep, handleFormData1, prevStep, values }) => {\n  const [error, setError] = useState(false);\n\n  const submitFormData = (e) => {\n    e.preventDefault();\n\n    if ( validator.isEmpty(values.fitness_level)) {\n      setError(true);\n    } else {\n      nextStep(1);\n    }\n  };\n  const prev=()=>{\n      if(values.experience===\"YES\"){\n        prevStep(1)\n      }else{\n        prevStep(2)\n      }\n  }\n  return (\n    <>\n      <Card style={{ marginTop: 100 }}>\n        <Card.Body>\n        <Card.Text>Question 5: How would you evaluate your current fitness level?\n\n</Card.Text>\n\n          <Form onSubmit={submitFormData}>\n           \n            <Form.Group className=\"mb-3\">\n\n            <ButtonToolbar aria-label=\"Toolbar with button groups\">\n  \n  <ButtonGroup value=\"1\"   onClick={handleFormData1(\"1\")} className=\"me-2 ms-5\" aria-label=\"Third group\">\n    <Button variant={values.fitness_level===\"1\"?\"primary\":\"outline-primary\"}>1</Button>\n  </ButtonGroup>\n  <ButtonGroup onClick={handleFormData1(\"2\")}  value=\"2\" className=\"me-2\" aria-label=\"Third group\">\n    <Button variant={values.fitness_level===\"2\"?\"primary\":\"outline-primary\"}>2</Button>\n  </ButtonGroup>\n  <ButtonGroup onClick={handleFormData1(\"3\")}  value=\"3\" className=\"me-2\"  aria-label=\"Third group\">\n    <Button variant={values.fitness_level===\"3\"?\"primary\":\"outline-primary\"}>3</Button>\n  </ButtonGroup>\n  <ButtonGroup  onClick={handleFormData1(\"4\")} value=\"4\" className=\"me-2\"  aria-label=\"Third group\">\n    <Button variant={values.fitness_level===\"4\"?\"primary\":\"outline-primary\"}>4</Button>\n  </ButtonGroup>\n  <ButtonGroup onClick={handleFormData1(\"5\")}  value=\"5\" className=\"me-2\"  aria-label=\"Third group\">\n    <Button variant={values.fitness_level===\"5\"?\"primary\":\"outline-primary\"}>5</Button>\n  </ButtonGroup>\n  <ButtonGroup  onClick={handleFormData1(\"6\")} value=\"6\" className=\"me-2\"  aria-label=\"Third group\">\n    <Button variant={values.fitness_level===\"6\"?\"primary\":\"outline-primary\"}>6</Button>\n  </ButtonGroup>\n  <ButtonGroup onClick={handleFormData1(\"7\")}  value=\"7\" className=\"me-2\"  aria-label=\"Third group\">\n    <Button variant={values.fitness_level===\"7\"?\"primary\":\"outline-primary\"}>7</Button>\n  </ButtonGroup>\n  <ButtonGroup onClick={handleFormData1(\"8\")} value=\"8\" className=\"me-2\"  aria-label=\"Third group\">\n    <Button variant={values.fitness_level===\"8\"?\"primary\":\"outline-primary\"}>8</Button>\n  </ButtonGroup>\n  <ButtonGroup  onClick={handleFormData1(\"9\")} value=\"9\" className=\"me-2\"  aria-label=\"Third group\">\n    <Button variant={values.fitness_level===\"9\"?\"primary\":\"outline-primary\"}>9</Button>\n  </ButtonGroup>\n  <ButtonGroup onClick={handleFormData1(\"10\")}  value=\"10\" className=\"me-2\"  aria-label=\"Third group\">\n    <Button variant={values.fitness_level===\"10\"?\"primary\":\"outline-primary\"}>10</Button>\n  </ButtonGroup>\n</ButtonToolbar>\n            </Form.Group>\n            {error ? (\n                <Form.Text style={{ color: \"red\" }}>\n                  This is a required field\n                </Form.Text>\n              ) : (\n                \"\"\n              )}\n           \n            <div style={{ display: \"flex\", justifyContent: \"space-around\" }}><Button variant=\"primary\" type=\"submit\">\n                ok\n              </Button>\n              </div>\n              <br>\n</br>\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n              <Button variant=\"primary\" onClick={prev}>\n               <b>{\"<\"}</b>\n              </Button>\n\n\n              <Button variant=\"primary\" type=\"submit\">\n              <b>{\">\"}</b>\n              </Button>\n            </div>\n\n\n          </Form>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default StepFive;","import React, { useState } from \"react\";\nimport { Form, Card, Button,FloatingLabel } from \"react-bootstrap\";\nimport validator from \"validator\";\n\n\nconst StepSix = ({ nextStep, handleFormData, prevStep, values }) => {\n  const [error, setError] = useState(false);\n\n  const submitFormData = (e) => {\n    e.preventDefault();\n\n    if ( validator.isEmpty(values.Comments)) {\n      setError(true);\n    } else {\n      nextStep(1);\n    }\n  };\n  return (\n    <>\n      <Card style={{ marginTop: 100 }}>\n        <Card.Body>\n        <Card.Text>Question 6: Before you go, do you have any concerns or injuries you would like to share with us?\n</Card.Text>\n\n          <Form onSubmit={submitFormData}>\n           \n            <Form.Group className=\"mb-3\">\n\n                \n              <FloatingLabel controlId=\"floatingTextarea2\" label=\"Comments\">\n    <Form.Control\n      as=\"textarea\"\n      placeholder=\"Leave a comment here\"\n      onInput={handleFormData(\"Comments\")}\n      style={{ height: '100px' }}\n    />\n  </FloatingLabel>\n              {error ? (\n                <Form.Text style={{ color: \"red\" }}>\n                  This is a required field\n                </Form.Text>\n              ) : (\n                \"\"\n              )}\n            </Form.Group>\n            <div style={{ display: \"flex\", justifyContent: \"space-around\" }}><Button variant=\"primary\" type=\"submit\">\n                Submit\n              </Button>\n              </div>\n              <br>\n</br>\n            <div className=\"d-flex justify-content-end\" style={{ display: \"flex\", justifyContent: \"right\" }}>\n              <Button variant=\"primary\" onClick={()=>prevStep(1)}>\n               <b>{\"<\"}</b>\n              </Button>\n\n\n             \n            </div>\n\n\n          </Form>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default StepSix;","import Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nexport const Home=({ nextStep,})=>{\n    return <>\n    \n   \n    <Card className=\"text-center\" style={{ marginTop: 100 }}>\n  <Card.Body>\n    <Card.Title>Being Fit studio welcomes you\n</Card.Title>\n    <Card.Text>\n    Would you like to explore the powerfulness of Yoga with us?\n\n    </Card.Text>\n    <Button onClick={()=>nextStep(1)} variant=\"primary\">Absolutely\n</Button>\n  </Card.Body>\n</Card>\n    </>\n    }","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\n\nconst Final = ({ values }) => {\n\n    //destructuring the object from values\n  const { Name,Gender,Comments, experience, experience_level,fitness_level, email,dob } = values;\n  return (\n    <>\n      <Card style={{ marginTop: 100, textAlign: \"left\" }} className=\"text-center\">\n  <Card.Header>Form Details</Card.Header>\n        <Card.Body>\n\n         \n          <p>\n            <strong>Name :</strong> {Name}{\" \"}\n          </p>\n          <p>\n            <strong>Gender :</strong> {Gender}{\" \"}\n          </p>\n          <p>\n            <strong>dob :</strong> {dob}{\" \"}\n          </p>\n          <p>\n            <strong>Email :</strong> {email}{\" \"}\n          </p>\n          <p>\n            <strong>experience :</strong> {experience}{\" \"}\n          </p>\n          {experience_level.length>0? <p>\n            <strong>experience_level :</strong> {experience_level}{\" \"}\n          </p>:null}\n          <p>\n            <strong>fitness_level :</strong> {fitness_level}{\" \"}\n          </p>\n          <p>\n            <strong>Comments :</strong> {Comments}{\" \"}\n          </p>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default Final;","\nimport { useState } from \"react\";\n\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nimport StepOne from \"./form1\";\nimport StepTwo from \"./form2\";\nimport StepThree from \"./form3\";\nimport StepFour from \"./form4\";\nimport StepFive from \"./form5\";\nimport StepSix from \"./form6\";\nimport {Home} from \"./home\"\nimport Final from \"./final\"\nfunction MultiStepForm(){\nconst [step, setstep] = useState(0);\n//var date=new Date()\n  const [formData, setFormData] = useState({\n    Name: \"\",\n    dob:\"\" ,\n    Gender:\"Gender\",\n    age: \"\",\n    experience:\"\",\n    experience_level:\"\",\n    email: \"\",\n    fitness_level:\"\",\n    Comments:\"\"\n  })\n\n  const nextStep = (i) => {\n    setstep(step + i);\n  };\n\n  const prevStep = (i) => {\n    setstep(step - i);\n  };\n\n  const handleInputData = input => e => {\n    let value=\"\"\n    if(input===\"Gender\") {\nvalue = e;\n    }else{\n      value=e.target.value\n      console.log(e,\"a\");\n    }\n\n    setFormData(prevState => ({\n      ...prevState,\n      [input]: value\n  }));\n  console.log(formData);\n  }\n  const handleInputData1 = input => e => {\n    \n    setFormData(prevState => ({\n      ...prevState,\n      \"fitness_level\": input\n  }));\n  console.log(formData);\n  }\n\n  switch (step) {\n    case 0:\n      return (\n        <div className=\"App\">\n          <Container>\n            <Row>\n              <Col  md={{ span: 6, offset: 3 }} className=\"custom-margin\">\n                <Home nextStep={nextStep}  />\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      );\n    case 1:\n      return (\n        <div className=\"App\">\n          <Container>\n            <Row>\n              <Col  md={{ span: 6, offset: 3 }} className=\"custom-margin\">\n                <StepOne nextStep={nextStep}  handleFormData={handleInputData} values={formData} />\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      );\n    // case 2 to show stepTwo form passing nextStep, prevStep, and handleInputData as handleFormData method as prop and also formData as value to the fprm\n    case 2:\n      return (\n        <div className=\"App\">\n          <Container>\n            <Row>\n              <Col  md={{ span: 6, offset: 3 }} className=\"custom-margin\">\n                <StepTwo nextStep={nextStep} prevStep={prevStep} handleFormData={handleInputData} values={formData} />\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      );\n      // Only formData is passed as prop to show the final value at form submit\n    case 3:\n      return (\n        <div className=\"App\">\n          <Container>\n            <Row>\n              <Col  md={{ span: 6, offset: 3 }} className=\"custom-margin\">\n                {/* <Final values={formData}  /> */}\n                <StepThree nextStep={nextStep} prevStep={prevStep} handleFormData={handleInputData} values={formData}/>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      );\n      case 4:\n        return (\n          <div className=\"App\">\n            <Container>\n              <Row>\n                <Col  md={{ span: 6, offset: 3 }} className=\"custom-margin\">\n                  <StepFour nextStep={nextStep} prevStep={prevStep} handleFormData={handleInputData} values={formData}/>\n                </Col>\n              </Row>\n            </Container>\n          </div>\n        );\n        case 5:\n          return (\n            <div className=\"App\">\n              <Container>\n                <Row>\n                  <Col  md={{ span: 6, offset: 3 }} className=\"custom-margin\">\n                    <StepFive nextStep={nextStep} prevStep={prevStep} handleFormData1={handleInputData1} values={formData}/>\n                  </Col>\n                </Row>\n              </Container>\n            </div>\n          );\n          case 6:\n            return (\n              <div className=\"App\">\n                <Container>\n                  <Row>\n                    <Col  md={{ span: 6, offset: 3 }} className=\"custom-margin\">\n                      <StepSix nextStep={nextStep} prevStep={prevStep} handleFormData={handleInputData} values={formData}/>\n                    </Col>\n                  </Row>\n                </Container>\n              </div>\n            );\n    // default case to show nothing\n    default:\n      return (\n        <div >\n                               <Final values={formData}  /> \n\n        </div>\n      );\n  }\n}\n\nexport default MultiStepForm;","import 'bootstrap/dist/css/bootstrap.min.css';\nimport MultiStepForm from \"./components/form/MultiStepForm\";\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nfunction App() {\n  return (\n \n\n\n      <div>\n        <MultiStepForm />\n      </div>\n \n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}